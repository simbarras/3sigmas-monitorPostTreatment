name: Pipeline

on:
  - push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend-post-treatment
  IMAGE_VERSION: 0.0.1

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - name: Run coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4-beta
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  backend-image:
    needs:
      - backend-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: ./Dockerfile
          target: postTreatment
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ env.IMAGE_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

  frontend-image:
    needs:
      - backend-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: ./frontend/Dockerfile
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ steps.package-version.outputs.current-version }}
          labels: ${{ steps.meta.outputs.labels }}

